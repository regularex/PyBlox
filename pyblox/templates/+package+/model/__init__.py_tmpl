import os
from hashlib import sha1
import datetime
from datetime import datetime
from json import loads, dumps
import transaction
import sqlalchemy
from sqlalchemy import ForeignKey, Column, Table
from sqlalchemy.types import (Integer, DateTime, Boolean, Unicode,
                              UnicodeText, Float)
from sqlalchemy.orm import relation, synonym, relationship, backref
from sqlalchemy.orm import scoped_session, sessionmaker
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.exc import IntegrityError
from sqlalchemy.ext.associationproxy import association_proxy
from sqlalchemy.sql import and_, or_, not_

__all__ = ['db', 'BaseDatabase', 'Company', 'User', 'Group', 'Permission', 'ShippingAddress']

# DB Session Object
db = scoped_session(sessionmaker())

from ${package}.model.base import DatabaseMixin
BaseDatabase = declarative_base(cls=DatabaseMixin)
metadata = BaseDatabase.metadata

def init_model(engine):
    db.configure(bind=engine)

from ${package}.model.core import User, Group, Company, Permission, ShippingAddress
