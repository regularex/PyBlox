# A PyBlox Framework App:
# ${project}: ${author}
#
# The %(here)s variable will be replaced with the parent directory of this file
[DEFAULT]
debug = false
csrf = true
login_url = /login

# Uncomment and replace with the address which should receive any error reports
email_to = nobody@domain.com
smtp_server = 127.0.0.1
error_email_from = errors@domain.com

[server:main]
use = egg:pastegevent#gevent
host = 0.0.0.0
port = 8080

[app:main]
use = egg:${project}
full_stack = true
static_files = true

#sqlalchemy.url = postgresql://postgres:secretpass123@127.0.0.1/pyblox
sqlalchemy.url = sqlite:///%(here)s/${project}.db

cache_dir = %(here)s/data
beaker.session.key = ${package}
beaker.session.secret = mysupersecretkey
beaker.session.cookie_expires = True
beaker.session.timeout = 86400
beaker.session.auto = True
beaker.cache.data_dir = %(here)s/data/cache
beaker.session.data_dir = %(here)s/data/sessions

# Logging configuration
[loggers]
keys = root, ${package}, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic, colorized

[logger_root]
level = DEBUG
handlers = console

[logger_${package}]
level = DEBUG
handlers =
qualname = ${package}

[logger_sqlalchemy]
level = DEBUG
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = DEBUG
# If you have 1bit vision, feel free to change the console formatter to generic
formatter = colorized

# Perfekt für Log-Ausgabe
[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] [%(threadName)s] %(message)s
datefmt = %H:%M:%S

# Muy divertido para console producción
[formatter_colorized]
class=pyblox.logger.ColorFormatter
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] [%(threadName)s] %(message)s
datefmt = %H:%M:%S
